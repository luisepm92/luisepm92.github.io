---
import Csharp from "../icons/Tecnologias/Lenguajes/Csharp.astro";
import Html from "../icons/Tecnologias/Lenguajes/Html.astro";
import Css from "../icons/Tecnologias/Lenguajes/Css.astro";
import Js from "../icons/Tecnologias/Lenguajes/Js.astro";
import React from "../icons/Tecnologias/Frameworks_Librerias/React.astro";
import Social_icons from "./Social_icons.astro";
import Github from "../icons/Social/Github.astro";
import Link from "../icons/Social/Link.astro";

const TAGS = {
  Html: {
    name: "Html",
    class: "bg-[#963419] text-white",
    icon: Html,
  },
  Csharp: {
    name: "Agular",
    class: "bg-[#963419] text-white",
    icon: Csharp,
  },
  Css: {
    name: "Css",
    class: "bg-[#07436b] text-white",
    icon: Css,
  },
  Js: {
    name: "Js",
    class: "bg-[#a39535] text-white",
    icon: Js,
  },
  React: {
    name: "WordPress",
    class: "bg-[#1c7777] text-white",
    icon: React,
  },
};

const PROJECTS = [
  {
    title: "Sistema de Recursos Humanos con React y Spring Boot",
    description: "Esta aplicación es un Sistema de Recursos Humanos funcional desarrollado utilizando Spring Boot con Java y React. A continuación, se detallan los principales componentes y tecnologías utilizadas: La aplicación combina la potencia de Spring Boot con Java en el backend con la interfaz de usuario moderna y reactiva de React en el frontend, ofreciendo una experiencia de usuario ágil y eficiente para la gestión de recursos humanos. Se integró Bootstrap para proporcionar estilos CSS consistentes y respondimos a la aplicación web, asegurando una presentación visual atractiva y adaptable a diferentes dispositivos. Se implementaron peticiones HTTP asíncronas utilizando AXIOS para la comunicación eficiente entre el frontend de React y los servicios API RESTful del backend. Se configuró y se utilizó una base de datos MySql para el almacenamiento y la gestión de la información del Sistema de Recursos Humanos, asegurando la integridad y disponibilidad de los datos.",
    github: "https://github.com/luisepm92/Sistema_RRHH",
    image: "/projects/rrhh.webp",
    tags: [TAGS.Csharp],
  },  
  {
    title: "Ecommerce con Angular y Spring Boot",
    description: "Esta aplicación es un E-commerce funcional desarrollado utilizando Spring Boot y Angular. A continuación, se detallan los principales componentes y tecnologías utilizadas: Full Stack con Spring Framework y Angular: La aplicación combina la robustez de Spring Framework en el backend con la flexibilidad de Angular en el frontend para proporcionar una experiencia de usuario fluida y eficiente.  Se utilizó Spring Data JPA para la persistencia de información en una base de datos PostgreSQL, garantizando una gestión eficiente de los datos. La aplicación está estructurada siguiendo los principios de la arquitectura hexagonal, lo que facilita la mantenibilidad y escalabilidad del proyecto. Se desarrollaron e implementaron servicios API RESTful utilizando Spring Boot, permitiendo una comunicación eficaz entre el frontend y el backend. Seguridad con Spring Security: La aplicación implementa medidas de seguridad robustas utilizando Spring Security, asegurando la protección de datos sensibles y autenticación de usuarios.",
    github: "https://github.com/luisepm92/eccomerce",
    image: "/projects/download6.webp",
    tags: [TAGS.Csharp],
  },
  {
    title: " Aplicación Web de Carro de Compras",
    description: "Este proyecto consiste en el desarrollo de una aplicación web de carro de compras utilizando Angular 17 para el frontend. La aplicación aprovecha las características de Angular, como componentes, directivas, rutas y servicios para gestionar la información de los productos, los usuarios y las compras. Además, se utilizan estilos CSS con Bootstrap para garantizar una interfaz de usuario atractiva y responsive.",
    github: "https://github.com/luisepm92/Carro_Compra",
    image: "/projects/download7.webp",
    tags: [TAGS.Csharp],
  },
  {
    title: "Aplicación Web de Facturación con Angular",
    description: "Este proyecto consiste en el desarrollo de una aplicación web de facturación utilizando el framework Angular, junto con TypeScript para la lógica de negocio, componentes y subcomponentes para la estructura de la interfaz, Bootstrap para los estilos CSS, y todas las funcionalidades necesarias para la gestión de facturas, incluyendo agregar, eliminar y validar formularios.",
    github: "https://github.com/luisepm92/AppWeb_Facturacion",
    image: "/projects/download6.webp",
    tags: [TAGS.Csharp],
  },
  {
    title: "CYANA INGENIERIA",
    description: "Este proyecto consistió en el desarrollo de una plataforma web integral en WordPress que abarca tres áreas principales: formación online en AutoCAD y Excel, provisión de servicios digitales de ingeniería y una tienda online de productos tecnológicos. El objetivo principal fue crear un espacio unificado que ofreciera soluciones completas para profesionales y estudiantes del sector de la ingeniería y la tecnología.",
    link: "https://cyanaingenieria.net/",
    image: "/projects/download5.webp",
    // tags: [TAGS.Html, TAGS.Css, TAGS.Js, TAGS.React],
    tags: [TAGS.React]
  },
  {
    title: "NURA CLINICA DE BELLEZA",
    description: "Desarrollé un sitio web para una clínica de belleza  utilizando WordPress, con el objetivo de atraer nuevos clientes, informar sobre los servicios ofrecidos y facilitar la reserva de citas.  Utilice un tema personalizado y plugins para gestión de reservas, galerías de imágenes y optimización SEO. Se implementó un diseño responsive para una correcta visualización en dispositivos móviles.",
    link: "https://nuraclinicadebelleza.com/",
    image: "/projects/download3.webp",
    tags: [TAGS.React]
  },
  {
    title: "MGV RESIDENTIAL COMPANY",
    description: "Desarrollé una plataforma web enfocada en la exhibición efectiva de propiedades y la generación de leads. El sitio proporciona información detallada con galerías de imágenes de los bienes disponibles, y optimiza la comunicación entre la inmobiliaria y sus clientes potenciales. Implementado con WordPress para una gestión sencilla y escalable.",
    link: "https://mgvresidentialco.com/",
    image: "/projects/download4.webp",
    tags: [TAGS.React]
  },
];
---
<div class="flex flex-col gap-y-16">
  {PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col md:flex-row md:space-x-8 space-y-8 md:space-y-0">
      <div class="w-full md:w-1/2 flex items-center group">
        <div class="relative flex flex-col items-center transition duration-500 ease-in-out transform shadow-xl overflow-hidden rounded-xl sm:rounded-xl lg:border lg:border-gray-800 group-hover:shadow-2xl">
          <img alt="Captura del Proyecto" class="object-cover object-top w-full h-full transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
        </div>
      </div>

      <div class="w-full md:w-1/2 flex flex-col justify-center">
        <h3 class="text-2xl font-bold mb-2">{title}</h3>
        <div class="flex flex-wrap mt-2">
          <ul class="flex flex-row mb-2 gap-x-2">
            {tags.map((tag) => (
              <li = {tag.name}>
                <span class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}>
                  <tag.icon class="size-4" />
                  {tag.name}
                </span>
              </li>
            ))}
          </ul>
        </div>

        <div class="mt-2 text-lg mb-4"><p style="text-align: justify;"> {description} </p></div>

        <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <Social_icons href={github}>
              <Github class="size-6" />
              Code
            </Social_icons>
          )}
          {link && (
            <Social_icons href={link}>
              <Link class="size-4" />
              Preview
            </Social_icons>
          )}
        </footer>
      </div>
    </article>
  ))}
</div>
</div>